#include <iostream>
#include <stack>
using namespace std;

void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = (low - 1);
    for (int j = low; j <= high - 1; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}

void quick_sort(int arr[], int low, int high) {
    stack<int> stk;
    stk.push(low);
    stk.push(high);
    while (!stk.empty()) {
        high = stk.top();
        stk.pop();
        low = stk.top();
        stk.pop();
        int p = partition(arr, low, high);
        if (p - 1 > low) {
            stk.push(low);
            stk.push(p - 1);
        }
        if (p + 1 < high) {
            stk.push(p + 1);
            stk.push(high);
        }
    }
}

void print_array(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main() {
    int arr[] = { 9, 3, 5, 1, 8, 2, 7, 4, 6 };
    int n = sizeof(arr) / sizeof(arr[0]);
    quick_sort(arr, 0, n - 1);
    cout << "Sorted array: ";
    print_array(arr, n);
    return 0;
}
